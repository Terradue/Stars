# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Install dependencies (hdf5)
      run: sudo apt install hdf5-tools -y
    - name: Restore dependencies
      run: dotnet restore src/
    - name: Build
      run: dotnet build --no-restore src/
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --settings:src/coverlet.runsettings --results-directory:TestResults src/
    - uses: codecov/codecov-action@v1
      with:
        directory: TestResults
        fail_ci_if_error: false # optional (default = false)
        verbose: true # optional (default = false)
        flags: unittests
        name: .NET Test Coverage
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Install dotnet format
      run: dotnet tool update -g dotnet-format
    - name: Check Format
      run: dotnet format --verify-no-changes --severity error src/
