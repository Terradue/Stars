//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
//This source code was auto-generated by MonoXSD
//
namespace Terradue.Stars.Data.Model.Metadata.Sentinels.Sentinel1.Noise {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("noise", Namespace="", IsNullable=false)]
    public partial class l1NoiseVectorType {
        
        private adsHeaderType adsHeaderField;
        
        private noiseVectorListType noiseVectorListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public adsHeaderType adsHeader {
            get {
                return this.adsHeaderField;
            }
            set {
                this.adsHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public noiseVectorListType noiseVectorList {
            get {
                return this.noiseVectorListField;
            }
            set {
                this.noiseVectorListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adsHeaderType {
        
        private missionIdType missionIdField;
        
        private productType productTypeField;
        
        private polarisationType polarisationField;
        
        private sensorModeType modeField;
        
        private swathType swathField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime stopTimeField;
        
        private string absoluteOrbitNumberField;
        
        private string missionDataTakeIdField;
        
        private string imageNumberField;
        
        /// <remarks/>
        public missionIdType missionId {
            get {
                return this.missionIdField;
            }
            set {
                this.missionIdField = value;
            }
        }
        
        /// <remarks/>
        public productType productType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public polarisationType polarisation {
            get {
                return this.polarisationField;
            }
            set {
                this.polarisationField = value;
            }
        }
        
        /// <remarks/>
        public sensorModeType mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public swathType swath {
            get {
                return this.swathField;
            }
            set {
                this.swathField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stopTime {
            get {
                return this.stopTimeField;
            }
            set {
                this.stopTimeField = value;
            }
        }
        
        /// <remarks/>
        public string absoluteOrbitNumber {
            get {
                return this.absoluteOrbitNumberField;
            }
            set {
                this.absoluteOrbitNumberField = value;
            }
        }
        
        /// <remarks/>
        public string missionDataTakeId {
            get {
                return this.missionDataTakeIdField;
            }
            set {
                this.missionDataTakeIdField = value;
            }
        }
        
        /// <remarks/>
        public string imageNumber {
            get {
                return this.imageNumberField;
            }
            set {
                this.imageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    public enum missionIdType {
        
        /// <remarks/>
        S1A,
        
        /// <remarks/>
        S1B,
        
        /// <remarks/>
        S1C,
        
        /// <remarks/>
        ASA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    public enum productType {
        
        /// <remarks/>
        SLC,
        
        /// <remarks/>
        GRD,
        
        /// <remarks/>
        BRW,
        
        /// <remarks/>
        OCN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    public enum polarisationType {
        
        /// <remarks/>
        HH,
        
        /// <remarks/>
        HV,
        
        /// <remarks/>
        VH,
        
        /// <remarks/>
        VV,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    public enum sensorModeType {
        
        /// <remarks/>
        S1,
        
        /// <remarks/>
        S2,
        
        /// <remarks/>
        S3,
        
        /// <remarks/>
        S4,
        
        /// <remarks/>
        S5,
        
        /// <remarks/>
        S6,
        
        /// <remarks/>
        IW,
        
        /// <remarks/>
        EW,
        
        /// <remarks/>
        WV,
        
        /// <remarks/>
        EN,
        
        /// <remarks/>
        N1,
        
        /// <remarks/>
        N2,
        
        /// <remarks/>
        N3,
        
        /// <remarks/>
        N4,
        
        /// <remarks/>
        N5,
        
        /// <remarks/>
        N6,
        
        /// <remarks/>
        RF,
        
        /// <remarks/>
        IM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    public enum swathType {
        
        /// <remarks/>
        S1,
        
        /// <remarks/>
        S2,
        
        /// <remarks/>
        S3,
        
        /// <remarks/>
        S4,
        
        /// <remarks/>
        S5,
        
        /// <remarks/>
        S6,
        
        /// <remarks/>
        IW,
        
        /// <remarks/>
        IW1,
        
        /// <remarks/>
        IW2,
        
        /// <remarks/>
        IW3,
        
        /// <remarks/>
        EW,
        
        /// <remarks/>
        EW1,
        
        /// <remarks/>
        EW2,
        
        /// <remarks/>
        EW3,
        
        /// <remarks/>
        EW4,
        
        /// <remarks/>
        EW5,
        
        /// <remarks/>
        WV,
        
        /// <remarks/>
        WV1,
        
        /// <remarks/>
        WV2,
        
        /// <remarks/>
        EN,
        
        /// <remarks/>
        N1,
        
        /// <remarks/>
        N2,
        
        /// <remarks/>
        N3,
        
        /// <remarks/>
        N4,
        
        /// <remarks/>
        N5,
        
        /// <remarks/>
        N6,
        
        /// <remarks/>
        RF,
        
        /// <remarks/>
        IS1,
        
        /// <remarks/>
        IS2,
        
        /// <remarks/>
        IS3,
        
        /// <remarks/>
        IS4,
        
        /// <remarks/>
        IS5,
        
        /// <remarks/>
        IS6,
        
        /// <remarks/>
        IS7,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class floatArray {
        
        private string countField;
        
        private string unitsField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class intArray {
        
        private string countField;
        
        private string unitsField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int64))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int32))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int16))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(@byte))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unitInteger {
        
        private string unitsField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="integer")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int32))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int16))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(@byte))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class int64 : unitInteger {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int16))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(@byte))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class int32 : int64 {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(@byte))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class int16 : int32 {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class @byte : int16 {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class noiseVectorType {
        
        private System.DateTime azimuthTimeField;
        
        private int32 lineField;
        
        private intArray pixelField;
        
        private floatArray noiseLutField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime azimuthTime {
            get {
                return this.azimuthTimeField;
            }
            set {
                this.azimuthTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int32 line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public intArray pixel {
            get {
                return this.pixelField;
            }
            set {
                this.pixelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public floatArray noiseLut {
            get {
                return this.noiseLutField;
            }
            set {
                this.noiseLutField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class noiseVectorListType {
        
        private noiseVectorType[] noiseVectorField;
        
        private string countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("noiseVector", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public noiseVectorType[] noiseVector {
            get {
                return this.noiseVectorField;
            }
            set {
                this.noiseVectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
}
